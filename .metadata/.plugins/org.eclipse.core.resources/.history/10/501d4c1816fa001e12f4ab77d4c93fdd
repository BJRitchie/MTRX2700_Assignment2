#include "led.h"
#include "timer.h"
#include "stm32f303xc.h"

// code from lecture example W05-C-interrupt by Dr Stewart Worrall
// initialise the discovery board I/O (just outputs: inputs are selected by default)
void initialise_leds() {
	// get a pointer to the second half word of the MODER register (for outputs pe8-15)
	uint16_t *led_output_registers = ((uint16_t *)&(GPIOE->MODER)) + 1;
	*led_output_registers = 0x5555;
}

// code from lecture example W05-C-interrupt by Dr Stewart Worrall
// enable the clocks for desired peripherals (GPIOA, C and E)
void enable_clocks() {
	RCC->AHBENR |= RCC_AHBENR_GPIOAEN | RCC_AHBENR_GPIOCEN | RCC_AHBENR_GPIOEEN;
}

// chase the led around the circle (also by Dr Stewart Worrall)
void chase_led(){
	// get the period
	uint32_t period = 100000;

	// set a toggle for increasing/decreasing
	int16_t decr = 1000;

	// check
	if ((period*period > decr*decr) && (period <= 1000000)){
		period -= decr;
	}
	else {
		// flip sign
		decr *= -1;
	}
	setPeriod(&TIM2_init, period);


	uint8_t *led_register = ((uint8_t*)&(GPIOE->ODR)) + 1;

	*led_register <<= 1;
	if (*led_register == 0) {
		*led_register = 1;
	}
}
